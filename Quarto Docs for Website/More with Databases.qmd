---
title: "More with Databases"
author: "James Van Slyke"
---

```{r setup, include=FALSE}
library(tidyverse)
```

## More on creating Databases

On the Moodle website download the pdf file *Anxiety and Learning example*

Step 1 - Identify variables

-   Variable 1 = Anxiety

-   Variable 2 = Learn new material

-   Variable 3 = Difficulty of new material

Step 2 - What kind of variables?

-   Anxiety = categorical -\> ordinal

    -   Anxiety is a categorical variable because it's different groups of persons based on the presence of anxiety, but there is an order based on the amount of anxiety (Low, Medium, High), thus it is ordinal.

-   Difficulty of new material = categorical -\> ordinal

    -   Just like anxiety, difficulty of new material is a categorical variable because it's different groups of persons based on the difficulty of the material, but there is an order to the level of difficulty (Low, Medium, High), this it is ordinal

-   Ability to learn new material = numeric -\> ratio

    -   Ability to learn new material is numeric because it is the variable being measured (based on how much material is learned out of a possible 20). Since it has an absolute zero point (there are no negative numbers) and it's possible to talk about a score being twice as good as another it is a ratio scale.

Step 3 - How do I get it into R Studio?

The first example we'll look at as a Tibble. A tibble is helpful because you can set it up like a normal spreadsheet. Use a `~` to tell R which words are the names for your variables. For each variable make sure you don't have any spaces. All variables and objects should not contain a space between words. Choose a single word for your variables or use an `_`. Remember that each row should be an observation and each column should be a variable. Here's how you would set it up (It's incomplete, but you get the general idea).

```{r, include=TRUE}
Learning_TR <- tribble(~Difficulty, ~Anxiety, ~Score, 
                    "Low",       "Low",       18,
                    "Low",       "Low",       17,
                    "Low",       "Low",       20,
                    "Low",       "Low",       16,
                    "Low",       "Low",       17,
                    "Low",      "Medium",     18,
                    "Low",      "Medium",     18,
                    "Low",      "Medium",     19,
                    "Low",      "Medium",     15,
                    "Low",      "Medium",     17, 
                    "Low",       "High",      18,
                    "Low",       "High",      17,
                    "Low",       "High",      16,
                    "Low",       "High",      18,
                    "Low",       "High",      19,
                  "Medium",       "Low",      18)
```

Another way to create this kind of dataset is to use the repeat function `rep`. But remember you need to slightly different patterns to include each observation based on the different ordinal variables.

```{r}
Learning <- data.frame(
       Difficulty = 
      c(rep(c("Low", "Medium", "High"), each = 15)), 
       Anxiety = 
      c(rep(c("Low", "Medium", "High"), times = 5)), 
       Score = 
      c(18, 18, 18, 17, 18, 17, 20, 19, 16,
        16, 15, 18, 17, 17, 19, 18, 18, 14, 
        14, 17, 15, 17, 18, 17, 16, 15, 12,
        14, 14, 16, 11, 15, 9, 6, 12, 8, 10,
        13, 7, 10, 11, 8, 8, 12, 5))
Learning
```

Let's check out our variables using the `str` command

```{r}
str(Learning)
```

Notice our two ordinal variables are listed as `chr`, which stands for character and our ratio variable is listed as `num` which stands for numeric or number.

The only thing missing is making our two ordinal variables *factors*. A factor allows us to show a character variable based on a specific order, so they can actually be ordinal and not just words or strings. There are two ways to do this.

First define the levels of your factor variable.

```{r}
Levels <- c("Low", "Medium", "High")
```

Then change the variable itself using the object `Levels` to define the order of your factor variable.

```{r}
Learning$Difficulty <- factor(Learning$Difficulty, 
                     levels = Levels)
```

You can also define the levels in the code to create a factor in one step like this example using the Anxiety variable.

```{r}
Learning$Anxiety <- factor(Learning$Anxiety, 
            levels = c("Low", "Medium", "High"))
```

Now check out the structure with the adjustments you've just made to your dataset. It should now identify `Anxiety` and `Difficulty` as factors.

```{r}
str(Learning)
```

## Bar graph

To create a bar graph we need to do a little more work since this will be based on one of our measures of central tendency, the mean, because count or number won't tell us much about the variables.

So we need to use the pipe again `|>` and something new, the summarize function `summarise`. Summarise allows us to calculate various measurements of central tendency, variation, and others. Then we can use those numbers in a graph.

```{r}
Learning_Mean <- Learning |>
  group_by(Anxiety) |>
  summarise(n = n(),
            mean = mean(Score))
Learning_Mean
```

Next Let's create the bar graph using the Anxiety variable and mean score from the new dataset.

```{r}
ggplot(data = Learning_Mean) +
  geom_bar(mapping = aes(x = Anxiety, 
           y = mean), stat = "identity" )
```
