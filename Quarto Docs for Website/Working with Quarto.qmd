---
title: "Working with Quarto"
author: "James Van Slyke"
---

```{r, include=FALSE}
#Label - include all your packages here
library(tidyverse)
library(palmerpenguins)
```

# Quarto

[Quarto](https://quarto.org/) is a document format in R Studio that allows you to print off your notes, homework, and code as a word doc or other types of files. It is based on [R markdown](https://rmarkdown.rstudio.com/), which is a prior version of this software. You can also make websites, slide decks, and other formats to present your findings from your statistical research. For our class we'll be using it for homework, quizzes, and tests when we're working on problems that involve data analysis.

## Palmer Penguins

![](https://raw.githubusercontent.com/quarto-dev/quarto-web/main/docs/get-started/hello/rstudio/lter_penguins.png){style="float:right;" fig-alt="Illustration of three species of Palmer Archipelago penguins: Chinstrap, Gentoo, and Adelie. Artwork by @allison_horst." width="401;" fig-align="left"}

For example, the `penguins` data from the [**palmerpenguins**](https://allisonhorst.github.io/palmerpenguins "palmerpenguins R package") package contains size measurements for `r nrow(penguins)` penguins from three species observed on three islands in the Palmer Archipelago, Antarctica.

## Graphs

You can use the Palmer Penguins dataset to make a graph or plot of the data.

The graph below shows the relationship between flipper and bill lengths of these penguins.

```{r}
#| label: plot-penguins
#| warning: false
#| echo: false

ggplot(penguins, 
       aes(x = flipper_length_mm, y = bill_length_mm)) +
  geom_point(aes(color = species, shape = species)) +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(
    title = "Flipper and bill length",
    subtitle = "Dimensions for penguins at Palmer Station LTER",
    x = "Flipper length (mm)", y = "Bill length (mm)",
    color = "Penguin species", shape = "Penguin species"
  ) +
  theme_minimal()
```

Notice how Quarto runs the code to create your graph and then includes it in the output.

[Here](https://quarto.org/docs/get-started/hello/rstudio.html) is a tutorial for Quarto using R Studio

### Rendering

When you want to preview your content you hit the render button and it will show you how you are doing so far.

### Code Chunks

If you go up to the insert feature in the tool bar, you can insert a cell like the one below where you can include R code. Or you can use the hot keys `Option+Command+I` for the Mac or in Windows `Control+Alt+I`

```{r}

```

Then you can put code into the cell to run it in the document

```{r}
summary(cars)
```

If you click the green arrow on the right of the cell, it will run the code chunk for you and you can check it to make sure it's right.

## How to set up an assignment

You can download the [assignment template](https://jvanster.github.io/Assignment%20Template.qmd) to use when you are working on your assignment. Here is how to set it up.

## 1. Write your YAML file

This is just the title of the assignment and your name, date, and the output, which will be a word document. This is always at the top of any Quarto document.

## 2. Add the r setup file

The r setup file lets you add any libraries or datasets you may need for the file. For example, you'll need to usually add the *tidyverse* library for most of the assignments.

You'll also need to add any datasets you are working with that you need to import. For example, to add SPSS files like the `Album Sales` Dataset you'll need to add the `haven` library and then include the code to import the file.

Or if you import a .csv file, you'll need to include the code for that as well.

If you're not sure of where the file is, you can always import the file first and the copy the code from your console. Typically this is not included (include = FALSE), but sometimes we need to see how you set things up.

## 3. Add questions from the assignment.

For each question you'll want to copy and paste the question from your homework into R Markdown.

## 4. Answer the question

Quarto allows you to answer the question using both the code and output. So I'll start with a descriptive sentence or annotation about what I'm doing and then show the code and the output.

Filter dataset to mass below 250

```{r}
Smaller_StarWars <- starwars |>
  filter(starwars$mass < 250)
Smaller_StarWars
```

Create a scatterplot of mass and height

```{r include=TRUE}
ggplot(data = Smaller_StarWars) +
  geom_point(mapping = aes(x = mass, 
                           y = height))
```

## 5 Render your document

After your done with your document and want to turn it in, you'll click the `render` button and it will open as a word document.

The document will be saved in your working directory. The working directory is the file where all your current files are being saved. It should be listed in your console or you can type the command `getwd()` to find it as well.
