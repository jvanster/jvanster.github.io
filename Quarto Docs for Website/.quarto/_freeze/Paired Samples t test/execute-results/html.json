{
  "hash": "72a88fbbcce1d3d12534def4f75f5c78",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Paired Samples t test\"\nauthor: \"James Van Slyke\"\n---\n\n\n\n\n*Make sure to read the description of the independent t-test before moving to the paired t-test*\n\n### Books for Reference\n\nHere's two books that would be good to reference for this discussion.\n\n-   Chapter 10 from Field, A. (2017). *Discovering Statistics Using IBM SPSS Statistics* (5th Edition). SAGE Publications, Ltd. (UK).\n\n-   Chapter 13 & 14 from Pagano, R. (2010). *Understanding Statistics in the Behavioral Sciences* (9th Edition). Wadsworth.\n\n### Hypotheses in the t-test\n\nThe paired samples t-test is very similar to the independent t-test and the basic assumptions regarding the the two groups are the same.\n\n> Null Hypothesis - Experimental Group = Control Group\n\n> Alternative Hypothesis - Experimental Group $\\neq$ Control Group\n\nThe difference in the paired samples t-test is that a single group goes through both the experimental and control conditions. The control condition is sometime referred to as the *baseline*, it's the measurement of a dependent variable without the presence of the independent variable.\n\n### Example: Treating Depression\n\nFor example, assume you are testing the effectiveness of a new drug on treating depression. You measure the current level of a sample of persons who are currently experiencing depression (baseline) then allow them to take the new drug for a month and then measure their depression a second time. So the assumptions of our two hypotheses would look something like this:\n\n> Null Hypothesis - Before taking the drug = After taking the drug\n\n> Alternative Hypothesis - Before taking the drug $\\neq$ After taking the drug\n\n### Formula: Paired t-test\n\nLet's look at the formula and then we can break down the elements.\n\n$$\nt = \\frac{\\bar D - \\mu_{D}}{\\frac{s_{D}}{\\sqrt{n}}}\n$$\n\n### Mean of the Difference Scores\n\nThe first element is the mean of the difference scores $\\bar D$. The t-test calculates the difference between each subject before and after the introduction of the independent variable. For our example, it would be the difference in their level of depression before and after taking the new drug. After all the differences are calculated the mean difference is found $\\bar D$. Obviously, if the independent variable has an effect, this number should have some amount of magnitude.\n\n### Mean of the Null Population\n\nThe second element to look at is the mean of the population for difference scores assuming the null hypothesis is true $\\mu_{D}$. Remember that the Null hypothesis assumes no difference between the sample means, so it assumes that this sample of differences scores comes from a population with zero difference or has a mean value of 0.\n\n$$\n\\mu_{D}=0\n$$\n\nSince this value is zero, it basically falls out of the equation, but it does remind us of the basis for this kind of t-test. The comparison in the formula is between a sample and a population. However, in this cases it's a sample of difference scores compared to a population of difference scores with an assumed mean of zero.\n\n### Hypothesis Assumptions\n\n> Null Hypothesis - The sample can reasonably be said to have come from a popultion of differnce scores with a mean of zero. Any difference between the means is the result of measurement error\n\n> Alternative Hypothesis - The sample *can not* reasonably be said to have come from a population of difference scores with a mean of zero because the difference is too great and not the result of measurement error.\n\n### Standard error of the Differences\n\nWe need some kind of value to compare to the mean difference. In this case the comparison is to the error. More specifically to the measurement error that could reasonably be expected based on random variation. This value is known as the standard error of the differences. This standard error is an indicator of the size of potential differences in sample means based on sampling variation.\n\nHere's the formula/symbols\n\n$$\n\\frac{s_{D}}{\\sqrt{n}}\n$$\n\nIf you look closely, this formula looks remarkably similar to the standard error of the mean (because it is!) but notice how the standard deviation from the population $\\sigma$ has been replaced with the standard deviation from the sample $s$. What is unique about the standard error of the differences is that it uses the standard deviation from the sample as an *estimate* of the standard deviation from the population.\n\n### *t* Distribution\n\nOnce the t score is found using the formula, it is compared to the t distribution, which is very similar to the z distribution.\n\n> The sampling distribution of t is a probability distribution of t values that would occur if all possible different samples of a fixed size N were drawn from the null hypothesis population (Pagano, p. 320)\n\nThe t distribution varies based on the degrees of freedom, which is directly related to N. Just like the z distribution, the t distribution has a mean of zero and as t values get larger, they are situated on the tails of the distribution as either positive or negative numbers. Just like with z scores, the larger the t score the less likely the sample of obtained difference scores can reasonably be assumed to have come from a population of difference scores with a mean of zero.\n\n###Example using R Studio For the example import the following dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch14ds1 <- read.csv(\"ch14ds1.csv\")\n```\n:::\n\n\n\nView the dataset in Console\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch14ds1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Pretest Posttest\n1        3        7\n2        5        8\n3        4        6\n4        6        7\n5        5        8\n6        5        9\n7        4        6\n8        5        6\n9        3        7\n10       6        8\n11       7        8\n12       8        7\n13       7        9\n14       6       10\n15       7        9\n16       8        9\n17       8        8\n18       9        8\n19       9        4\n20       8        4\n21       7        5\n22       7        6\n23       6        9\n24       7        8\n25       8       12\n```\n\n\n:::\n:::\n\n\nNotice that this is a fairly straightforward pre vs. posttest dataset.\n\nUse the summary command to look at the descriptive statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ch14ds1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Pretest        Posttest    \n Min.   :3.00   Min.   : 4.00  \n 1st Qu.:5.00   1st Qu.: 6.00  \n Median :7.00   Median : 8.00  \n Mean   :6.32   Mean   : 7.52  \n 3rd Qu.:8.00   3rd Qu.: 9.00  \n Max.   :9.00   Max.   :12.00  \n```\n\n\n:::\n:::\n\n\nThe means between the two groups are different and we can calculate the difference.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n7.52-6.32\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.2\n```\n\n\n:::\n:::\n\n\nOf course, we need to determine whether this difference is significant or not. So let's use r to run the paired samples t test. Notice that the code is fairly straightforward. Start with the *t.test* command and then list the two variables that are being analyzed, followed by lettting R know you want to perform a paired test *paired = TRUE*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(ch14ds1$Posttest, ch14ds1$Pretest, paired = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPaired t-test\n\ndata:  ch14ds1$Posttest and ch14ds1$Pretest\nt = 2.4495, df = 24, p-value = 0.02198\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n 0.1889003 2.2110997\nsample estimates:\nmean difference \n            1.2 \n```\n\n\n:::\n:::\n\n\nBased on the results, there does appear to be a significant difference between the pre and post tests.\n\nList the effect size as well using Cohen's d - Subtract the means from each other and divide by the standard deviation of the control group\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCohens_d <- (7.52-6.32)/1.73\nCohens_d\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6936416\n```\n\n\n:::\n:::\n\n\n#### Bar Graph\n\nThis time let's use a ggplot to make a better looking bar graph. Check out the format of the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nch14ds1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Pretest Posttest\n1        3        7\n2        5        8\n3        4        6\n4        6        7\n5        5        8\n6        5        9\n7        4        6\n8        5        6\n9        3        7\n10       6        8\n11       7        8\n12       8        7\n13       7        9\n14       6       10\n15       7        9\n16       8        9\n17       8        8\n18       9        8\n19       9        4\n20       8        4\n21       7        5\n22       7        6\n23       6        9\n24       7        8\n25       8       12\n```\n\n\n:::\n:::\n\n\nThe data is set up for a paired t test, so it includes 2 numeric variables. This is a problem because a single factor variable is missing that would be used to describe our two bars (i.e. pre and post test).\n\nThus, we need to create a second dataset or dataframe that has a factor variable (\"Group\") and numeric (\"Test\") variable. A new object is created called \"TestData\". The factor variable is created from scratch using the \"rep\" repeat function and then adding together the Pre and Post Test scores into a single numeric variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTestData <- data.frame(\n            group= rep(c(\"Pretest\", \"Posttest\"), each=25),\n            Test = c(ch14ds1$Pretest, ch14ds1$Posttest)\n            )\n```\n:::\n\n\nNext, find the descriptive statistics for this new dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nTest_Descriptives <- TestData %>%\n  group_by(group) %>%\n  summarize(n = n(),\n            mean = mean(Test),\n            sd = sd(Test),\n            se = sd / sqrt(n),\n            ci = qt(0.975, df = n - 1) * sd / sqrt(n))\n```\n:::\n\n\nCheck the descriptives and make sure they turned out ok.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTest_Descriptives\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n  group        n  mean    sd    se    ci\n  <chr>    <int> <dbl> <dbl> <dbl> <dbl>\n1 Posttest    25  7.52  1.83 0.366 0.755\n2 Pretest     25  6.32  1.73 0.345 0.712\n```\n\n\n:::\n:::\n\n\nFinally, create a basic bar graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Test_Descriptives, \n       aes(x = group, \n           y = mean)) +\n  geom_bar(stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](Paired-Samples-t-test_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nThen let's add in some error bars with the *geom_errorbar* function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Test_Descriptives, \n       aes(x = group, \n           y = mean)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin=mean-ci,\n                    ymax=mean+ci))\n```\n\n::: {.cell-output-display}\n![](Paired-Samples-t-test_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nFinally, let's make it look really nice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Test_Descriptives, \n       aes(x = group,\n           y = mean)) +\n  theme_minimal() +\n  geom_bar(stat = \"identity\", fill=\"cornflowerblue\") +\n  geom_errorbar(aes(ymin=mean-ci,\n                    ymax=mean+ci), width=.3, size=1) +\n  labs(title = \"Change in Performance from Pre to Post Tests\", \n       y=\"Mean Score\", x=\"Tests\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Paired-Samples-t-test_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nYou can also flip the columns to make it look cleaner\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Test_Descriptives, \n       aes(x = group,\n           y = mean)) +\n  theme_minimal() +\n  geom_bar(stat = \"identity\", fill=\"cornflowerblue\") +\n  geom_errorbar(aes(ymin=mean-ci,\n                    ymax=mean+ci), width=.3, size=1) +\n  labs(title = \"Change in Performance from Pre to Post Tests\", \n       y=\"Mean Score\", x=\"Tests\") +\n  scale_x_discrete(limits=c(\"Pretest\", \"Posttest\"))\n```\n\n::: {.cell-output-display}\n![](Paired-Samples-t-test_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nFinally, we can write out the results, which is essentially the same format as the independent t test.\n\n> On average, scores on the posttest were larger (M = 7.52, SE = .37) than the scores on the pretest (M = 6.32, SE = .35). This difference, 1.2, 95% CI\\[.19, 2.21\\], was significant t(24) = 2.45, p = 0.02. The results represented an effect size of d = 0.69.\\*\n",
    "supporting": [
      "Paired-Samples-t-test_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}