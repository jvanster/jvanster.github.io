{
  "hash": "e75c55aee56c22a0f2e21983658ea98e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"More with Databases\"\nauthor: \"James Van Slyke\"\n---\n\n\n\n\n## More on creating Databases\n\nOn the Moodle website download the pdf file *Anxiety and Learning example*\n\nStep 1 - Identify variables\n\n-   Variable 1 = Anxiety\n\n-   Variable 2 = Learn new material\n\n-   Variable 3 = Difficulty of new material\n\nStep 2 - What kind of variables?\n\n-   Anxiety = categorical -\\> ordinal\n\n    -   Anxiety is a categorical variable because it's different groups of persons based on the presence of anxiety, but there is an order based on the amount of anxiety (Low, Medium, High), thus it is ordinal.\n\n-   Difficulty of new material = categorical -\\> ordinal\n\n    -   Just like anxiety, difficulty of new material is a categorical variable because it's different groups of persons based on the difficulty of the material, but there is an order to the level of difficulty (Low, Medium, High), this it is ordinal\n\n-   Ability to learn new material = numeric -\\> ratio\n\n    -   Ability to learn new material is numeric because it is the variable being measured (based on how much material is learned out of a possible 20). Since it has an absolute zero point (there are no negative numbers) and it's possible to talk about a score being twice as good as another it is a ratio scale.\n\nStep 3 - How do I get it into R Studio?\n\nThe first example we'll look at as a Tibble. A tibble is helpful because you can set it up like a normal spreadsheet. Use a `~` to tell R which words are the names for your variables. For each variable make sure you don't have any spaces. All variables and objects should not contain a space between words. Choose a single word for your variables or use an `_`. Remember that each row should be an observation and each column should be a variable. Here's how you would set it up (It's incomplete, but you get the general idea).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLearning_TR <- tribble(~Difficulty, ~Anxiety, ~Score, \n                    \"Low\",       \"Low\",       18,\n                    \"Low\",       \"Low\",       17,\n                    \"Low\",       \"Low\",       20,\n                    \"Low\",       \"Low\",       16,\n                    \"Low\",       \"Low\",       17,\n                    \"Low\",      \"Medium\",     18,\n                    \"Low\",      \"Medium\",     18,\n                    \"Low\",      \"Medium\",     19,\n                    \"Low\",      \"Medium\",     15,\n                    \"Low\",      \"Medium\",     17, \n                    \"Low\",       \"High\",      18,\n                    \"Low\",       \"High\",      17,\n                    \"Low\",       \"High\",      16,\n                    \"Low\",       \"High\",      18,\n                    \"Low\",       \"High\",      19,\n                  \"Medium\",       \"Low\",      18)\n```\n:::\n\n\nAnother way to create this kind of dataset is to use the repeat function `rep`. But remember you need to slightly different patterns to include each observation based on the different ordinal variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLearning <- data.frame(\n       Difficulty = \n      c(rep(c(\"Low\", \"Medium\", \"High\"), each = 15)), \n       Anxiety = \n      c(rep(c(\"Low\", \"Medium\", \"High\"), times = 5)), \n       Score = \n      c(18, 18, 18, 17, 18, 17, 20, 19, 16,\n        16, 15, 18, 17, 17, 19, 18, 18, 14, \n        14, 17, 15, 17, 18, 17, 16, 15, 12,\n        14, 14, 16, 11, 15, 9, 6, 12, 8, 10,\n        13, 7, 10, 11, 8, 8, 12, 5))\nLearning\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Difficulty Anxiety Score\n1         Low     Low    18\n2         Low  Medium    18\n3         Low    High    18\n4         Low     Low    17\n5         Low  Medium    18\n6         Low    High    17\n7         Low     Low    20\n8         Low  Medium    19\n9         Low    High    16\n10        Low     Low    16\n11        Low  Medium    15\n12        Low    High    18\n13        Low     Low    17\n14        Low  Medium    17\n15        Low    High    19\n16     Medium     Low    18\n17     Medium  Medium    18\n18     Medium    High    14\n19     Medium     Low    14\n20     Medium  Medium    17\n21     Medium    High    15\n22     Medium     Low    17\n23     Medium  Medium    18\n24     Medium    High    17\n25     Medium     Low    16\n26     Medium  Medium    15\n27     Medium    High    12\n28     Medium     Low    14\n29     Medium  Medium    14\n30     Medium    High    16\n31       High     Low    11\n32       High  Medium    15\n33       High    High     9\n34       High     Low     6\n35       High  Medium    12\n36       High    High     8\n37       High     Low    10\n38       High  Medium    13\n39       High    High     7\n40       High     Low    10\n41       High  Medium    11\n42       High    High     8\n43       High     Low     8\n44       High  Medium    12\n45       High    High     5\n```\n\n\n:::\n:::\n\n\nLet's check out our variables using the `str` command\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(Learning)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t45 obs. of  3 variables:\n $ Difficulty: chr  \"Low\" \"Low\" \"Low\" \"Low\" ...\n $ Anxiety   : chr  \"Low\" \"Medium\" \"High\" \"Low\" ...\n $ Score     : num  18 18 18 17 18 17 20 19 16 16 ...\n```\n\n\n:::\n:::\n\n\nNotice our two ordinal variables are listed as `chr`, which stands for character and our ratio variable is listed as `num` which stands for numeric or number.\n\nThe only thing missing is making our two ordinal variables *factors*. A factor allows us to show a character variable based on a specific order, so they can actually be ordinal and not just words or strings. There are two ways to do this.\n\nFirst define the levels of your factor variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLevels <- c(\"Low\", \"Medium\", \"High\")\n```\n:::\n\n\nThen change the variable itself using the object `Levels` to define the order of your factor variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLearning$Difficulty <- factor(Learning$Difficulty, \n                     levels = Levels)\n```\n:::\n\n\nYou can also define the levels in the code to create a factor in one step like this example using the Anxiety variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLearning$Anxiety <- factor(Learning$Anxiety, \n            levels = c(\"Low\", \"Medium\", \"High\"))\n```\n:::\n\n\nNow check out the structure with the adjustments you've just made to your dataset. It should now identify `Anxiety` and `Difficulty` as factors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(Learning)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t45 obs. of  3 variables:\n $ Difficulty: Factor w/ 3 levels \"Low\",\"Medium\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ Anxiety   : Factor w/ 3 levels \"Low\",\"Medium\",..: 1 2 3 1 2 3 1 2 3 1 ...\n $ Score     : num  18 18 18 17 18 17 20 19 16 16 ...\n```\n\n\n:::\n:::\n\n\n## Bar graph\n\nTo create a bar graph we need to do a little more work since this will be based on one of our measures of central tendency, the mean, because count or number won't tell us much about the variables.\n\nSo we need to use the pipe again `|>` and something new, the summarize function `summarise`. Summarise allows us to calculate various measurements of central tendency, variation, and others. Then we can use those numbers in a graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLearning_Mean <- Learning |>\n  group_by(Anxiety) |>\n  summarise(n = n(),\n            mean = mean(Score))\nLearning_Mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 Ã— 3\n  Anxiety     n  mean\n  <fct>   <int> <dbl>\n1 Low        15  14.1\n2 Medium     15  15.5\n3 High       15  13.3\n```\n\n\n:::\n:::\n\n\nNext Let's create the bar graph using the Anxiety variable and mean score from the new dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = Learning_Mean) +\n  geom_bar(mapping = aes(x = Anxiety, \n           y = mean), stat = \"identity\" )\n```\n\n::: {.cell-output-display}\n![](More-with-Databases_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "More-with-Databases_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}